let express,bodyParser,graphqlHttp,mongoose,schemas,resolver;_67c‍.w("express",[["default",["express"],function(v){express=v}]]);_67c‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_67c‍.w("express-graphql",[["default",["graphqlHttp"],function(v){graphqlHttp=v}]]);_67c‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_67c‍.w("./graphql/schemas/index",[["default",["schemas"],function(v){schemas=v}]]);_67c‍.w("./graphql/resolver/index",[["default",["resolver"],function(v){resolver=v}]]);







const app = express();

//const events = [];

app.use(bodyParser.json());

/*
app.get('/', (req,res,next) => {
    res.send('Hello World!!!')
});
*/

app.use('/graphql',graphqlHttp({
    schema: schemas,
    rootValue: resolver,
    graphiql: true
}));

mongoose
    .connect(
        `mongodb+srv://${process.env.MONGO_USER}:${process.env.MONGO_PASS}@cluster0-5fhnv.mongodb.net/${process.env.MONGO_DB}?retryWrites=true&w=majority`
    )
    .then(() => {
        app.listen(4000);
    })
    .catch(err => {
        _67c‍.g.console.log(err);
        throw (err);
    }); 
//app.listen(4000);